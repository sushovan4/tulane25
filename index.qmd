---
title: "<span class='pref'>Vietoris--Rips Shadow for</span>Geometric Graph Reconstruction"
title-slide-attributes: 
  data-background-image: "drawing.png"
  data-background-opacity: "0.3"
subtitle: <green>Tulane University, 2025</green>
author: "<b>Sushovan Majhi</b>, *George Washington University, DC*"
fig-cap-location: bottom
callout-icon: false
format: 
    revealjs:
        theme: dark
        slide-number: true
        self-contained: true
        incremental: true
        css: style.css
        navigation-mode: vertical
bibliography: references.bib
editor: 
  render-on-save: true
html-math-method: mathml
---

# The <red>Problem</red> of <green>Graph Reconstruction</green> {background-image="drawing.png" background-opacity="0.3"}

## The Talk in a Nutshell

```{ojs}
//| panel: sidebar
viewof n = Inputs.range([0, 500], { label: "Sample Size", value: 150, step: 1 })
viewof tol = Inputs.range([0, 100], { label: "Noise", value: 20, step: 1 })
viewof scaleB = Inputs.range([0, 150], {
  step: 0.5,
  value: 0,
  label: tex`r_{\mathcal S}`
});
viewof scaleA = Inputs.range([0, 150], {
  step: 0.5,
  value: 0,
  label: tex`r_{\mathcal G}`
})
viewof scale = Inputs.range([0, 300], {
  step: 1,
  value: 0,
  label: tex`\beta`
})
viewof showShape = Inputs.toggle({ label: tex`{\mathcal G}`, value: false })
viewof showSample = Inputs.toggle({ label: tex`{\mathcal S}`, value: false })
viewof showRips = Inputs.toggle({ label: 'Euclidean Vietorisâ€“Rips', value: false })
```

```{ojs}
import { slider } from "@jashkenas/inputs"
{
  const svg = d3
    .create("svg")
    .attr("class", "canvas")
    .style("margin-left", "15px")
    .style("width", "100%")
    .style("height", height);

  if(showShape) {
    svg
      .append("path")
      .attr("class", "shape")
      .attr("stroke", "#3be57f")
      .attr("stroke-width", "2")
      .attr("fill", "none")
      .attr("d", d3.line()(X));
  }

  if(showSample) {
    svg
      .selectAll(".vertex")
      .data(S)
      .join("circle")
      .attr("class", "vertex")
      .attr("fill", "#bb473f")
      .attr("cx", (d) => d[0])
      .attr("cy", (d) => d[1])
      .attr("r", "2px");
  }
  if(scaleA > 0 || scaleB > 0)
    drawBalls(svg, X, S, scaleA, scaleB); 
  if(showRips)
    drawRips(svg, rips(S, scale));
  
  return svg.node();
}
rips = function (sample, scale) {
	const simplices=[d3.range(sample.length),[],[]];
	const adjRips = new Array(sample.length);
	const dEps = new Array(sample.length);
	
	for(var i = 0; i < adjRips.length; i++) {
	    adjRips[i]= new Array(sample.length);
	    
	    for(var j = 0; j < adjRips.length; j++) {
		  var d = dist2(sample[i],sample[j]); 
		  if( d < scale) {
		    adjRips[i][j]=d;
		    if(i<j)
    	 		simplices[1].push([i,j]);
		  }
		  else
		    adjRips[i][j]=0;
	    }
	}
	combinations(simplices[0],3).forEach(function(d) {
    	    if ( diam2( d3.permute(sample,d) ) < scale )
    		simplices[2].push(d);
  });
  return simplices;
}

X = lissajous(center, 0, center[0] - 70, center[1] - 50, 3, 2, 2000)
S = lissajous(center, tol, center[0] - 70, center[1] - 50, 3, 2, n)
center = [height / 2 + 100, height / 2]
height = 600
lissajous = function (
  center,
  tol = 5,
  a = center[0] - 100,
  b = center[1] - 50,
  kx = 3,
  ky = 2,
  n = 300
) {
  var t = d3.range(n).map(function (d) {
    return (2 * Math.PI * d) / (n - 1);
  });
  var points = [];
  for (var i = 0; i < n; i++) {
    points[i] = [
      center[0] +
        a * Math.cos(kx * t[i]) +
        d3.randomUniform(tol)() * Math.cos(d3.randomUniform(2 * Math.PI)()),
      center[1] +
        b * Math.sin(ky * t[i]) +
        d3.randomUniform(tol)() * Math.sin(d3.randomUniform(2 * Math.PI)())
    ];
  }
  return points;
}
function dist2(a, b) {
  if (a.length != b.length || a.length != 2) return null;
  return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
}
function diam2(points) {
  var diam = 0;
  points.forEach(function (p) {
    points.forEach(function (q) {
      diam = Math.max(diam, dist2(p, q));
    });
  });
  return diam;
}
function combinations(set, k) {
    var i, j, combs, head, tailcombs;
    if (k > set.length || k <= 0) {
	return [];
    }
    if (k == set.length) {
	return [set];
    }
    if (k == 1) {
	combs = [];
	for (i = 0; i < set.length; i++) {
	    combs.push([set[i]]);
	}
	return combs;
    }
    combs = [];
    for (i = 0; i < set.length - k + 1; i++) {
	head = set.slice(i, i + 1);
	tailcombs = combinations(set.slice(i + 1), k - 1);
	for (j = 0; j < tailcombs.length; j++) {
	    combs.push(head.concat(tailcombs[j]));
	}
    }
    return combs
}
drawBalls = function (svg, X, S, scaleA, scaleB) {
  svg
    .selectAll(".A-ball")
    .data(X)
    .join("circle")
    .attr("class", "A-ball")
    .attr("cx", (d) => d[0])
    .attr("cy", (d) => d[1])
    .attr("r", scaleA)
    .attr("fill", "#3be57f")
    .attr("stroke", "none")
    .attr("opacity", "0.1");
  svg
    .selectAll(".B-ball")
    .data(S)
    .join("circle")
    .attr("class", "B-ball")
    .attr("cx", (d) => d[0])
    .attr("cy", (d) => d[1])
    .attr("r", scaleB)
    .attr("fill", "#bb473f")
    .attr("stroke", "none")
    .attr("opacity", "0.1");
  
  return svg;
}
drawRips = function (svg, simplices) {

  if (simplices[2]) {
    svg.selectAll(".triangle")
      .data(simplices[2])
      .join("path")
      .attr("class", "triangle")
      .attr("d", (d) => d3.line()(d.map((v) => S[v])))
      .attr("fill", "#bb473f")
      .attr("stroke", "none")
      .attr("opacity", "0.1");
  }
  if (simplices[1]) {
    svg.selectAll(".edge")
      .data(simplices[1])
      .join("path")
      .attr("class", "edge")
      .attr("d", (d) => d3.line()(d.map((v) => S[v])))
      .attr("stroke", "#bb473f").attr("stroke-width", "1.5");
  }
  return svg;
}
```


## Practical Motivation
![The City of Berlin](berlin.jpg)

Q: How to draw the map of the city from a noisy point-cloud of <green>GPS locations</green>?

## A Reconstruction of Berlin
![Source: mapconstruction.org](mahmuda.jpg)


## Reconstruction Goals {.smaller}

- <green>**Shape**</green>: A *Shape* is modeled as a metric space
  - <gray>Abstract & Euclidean Riemannian manifolds</gray> [@MajhiLatschev]
  - <gray>general metric *curvature* spaces</gray> [@2406.04259]
  - <gray>abstract metric graphs</gray> [@Majhi2023]
  - *embedded* metric graph ($\mathcal G\subset\mathbb R^N$)

- <green>**Sample**</green>: A *finite* $\mathcal S\subset\mathbb R^N$ with small <green>Hausdorff</green> distance $d_{\mathrm H}(\mathcal G, \mathcal S)$
   
- <green>**Goal**</green>: Infer the topology of $\mathcal G$ from $\mathcal S$.
    - <gray>Estimate only the Betti numbers---number of connected components, cycles, voids, etc---of $\mathcal G$</gray>

    - <green>construct</green> a topological space $\hat{\mathcal G}$ from $\mathcal S$ so that
      - $\hat{\mathcal G}$ is homotopy equivalent to $\mathcal G$ (<green>topological</green> reconstruction)
      - $\hat{\mathcal G}\subset\mathbb R^N$ and $d_{\mathrm H}(\hat{\mathcal G}, \mathcal S)$ small (<green>geometric</green> reconstruction)
  

# <green>Topological</green> Reconstruction {background-image="drawing.png" background-opacity="0.3"}

## The Vietoris--Rips Complex {.smaller}

::: {.columns}

:::{.column}

- a metric space $(X,d_X)$
  
- a scale $\beta>0$ 
  
- $\mathcal{R}_\beta(X)$ is an abstract simplicial complex
   
  - $X$ is the <green>vertex set</green>
  - each <green>subset</green> $A\subset X$ of $(k+1)$ points with <green>diameter</green> less than $\beta$ is a $k$-simplex.

:::

::: {.column}
![](single-rips.png)

:::

:::

. . . 

::: {.callout-caution appearance="minimal"}

A *single* Vietoris--Rips complex <red>fails</red> to be topologically faithful, no matter the sample density 

:::

## Remedy 1: <green>$\varepsilon$</green>-path Metric {.smaller}

:::{.columns}
:::{.column width="60%"}

1. Fix a positive <green>$\varepsilon$</green>: <gray>proportional to $d_H(\mathcal S, \mathcal G)$</gray>;

2. Compute $\varepsilon$-neighborhood graph on $\mathcal S$: <green>$\mathcal R^{(1)}_\varepsilon(\mathcal S)$</green>;

3. Define <green>$d_{\mathcal S}^\varepsilon(a,b)$</green> to be the shortest path metric on $\mathcal R^{(1)}_\varepsilon(\mathcal S)$;

4. Denote by <green>$\mathcal{R}_\beta^\varepsilon(S)$</green> the Vietoris--Rips complex of $\mathcal S$ under $d^\varepsilon_{\mathcal S}$.

:::


:::{.column width="40%"}
![$\varepsilon$-path Metric on $\mathcal S$](path-metric.png)
:::

:::

. . . 

::: {.callout-tip appearance="minimal"}
## Quasi-isometry [@2406.04259]
For a dense enough sample $\mathcal S$ of $\mathcal G$, $d^\varepsilon_{\mathcal S}$ is <green>quasi-isometric</green> to the <green>length metric</green> on $\mathcal G$.

:::


## Remedy 2: <green>Large-scale</green> *Distortion* {.smaller}

:::{.columns}

:::{.column width="60%"}

- A finite sample around a corner does not see the corner
- <red>Global distortion</red>: $$\delta(\mathcal G)=\sup_{a\neq b}\frac{d^L_{\mathcal G}(a,b)}{\|a-b\|}$$
- <green>Large-scale distortion</green>: $$\delta^\varepsilon_R(\mathcal G)=\sup_{d^L(a,b)\geq R}\frac{d^L_{\mathcal G}(a,b)}{d^L_{\mathcal G^\varepsilon}(a,b)}$$
:::

:::{.column width="40%"}
![](graph.png){width="50%"}
:::

::::

. . . 

::: {.callout-tip appearance="minimal"}
## Limit [@2406.04259]
For any $R>0$, $\delta^\varepsilon_R(\mathcal G)\to1$ as $\varepsilon\to0$, <gray>provided $\mathcal G$ is compact</gray>.

:::

## Topological Reconstruction {.smaller}

:::{.callout-tip .nonincremental}
## Metric Graph Reconstruction [@graph_shadow]
<gray>Let $\mathcal G \subset \mathbb{R}^N$ be a compact, connected metric graph.  
Fix any $\xi\in\left(0,\frac{1}{4}\right)$.
For any positive $\beta<\frac{\ell(\mathcal G)}{4}$, choose a positive $\varepsilon\leq\frac{\beta}{3}$ such that $\delta^{\varepsilon}_{\beta}(\mathcal G)\leq\frac{1+2\xi}{1+\xi}$.</gray> 

If $\mathcal S\subset \mathbb R^N$ is such that $d_H(\mathcal G,\mathcal S)<\tfrac{1}{2}\xi\varepsilon$, then we have a homotopy equivalence <green>$\mathcal R^\varepsilon_\beta(\mathcal S)\simeq \mathcal G$</green>.
:::

. . . 

Fixing <green>$\xi=1/6$</green>, we get a simpler but weaker statement.

:::{.callout-tip .nonincremental appearance="minimal"}
Let $\mathcal G \subset \mathbb{R}^N$ be a compact, connected metric graph.  
For any positive $\beta<\ell(\mathcal G)/4$, choose a positive $\varepsilon\leq\beta/3$ such that $\delta^{\varepsilon}_{\beta}(\mathcal G)\leq8/7$. 
If $\mathcal S\subset \mathbb R^N$ and $d_H(\mathcal G,\mathcal S)<\varepsilon/12$, then we have a homotopy equivalence $\mathcal R^\varepsilon_\beta(\mathcal S)\simeq\mathcal G$.
:::


# <green>Geometric</green> Reconstruction {background-image="drawing.png" background-opacity="0.3"}

## Vietoris--Rips <green>Shadow</green> {.smaller}

:::{.columns}

:::{.column width="70%"}
- <green>Geometric reconstruction</green>: entails constructing <red>$\hat{\mathcal G}\subset\mathbb R^N$</red> from samples so that 
    - $\hat{\mathcal G}\simeq \mathcal G$ & $d_H(\hat{\mathcal G}, \mathcal S)$ is small

- Vietoris--Rips complexes are <red>abstract</red>, hence contain only topological information
- A good candidate for $\hat{\mathcal G}$ is the *shadow* of a topologically-faithful Vietoris--Rips.
:::


:::{.column width="30%"}

![$\mathcal K$](shadow-1.png){width="80%" fig-align="center"}

:::

:::


. . . 

:::{.columns}


:::{.column width="70%"}

- <green>Shadow</green>: For simplicial complex $\mathcal K$ with vertices from $\mathbb R^N$ is the union of the (Euclidean) convex hulls of simpices $\sigma\in\mathcal K$
  
- Notorious for being <red>topologically unfaithful</red>
    - @Chambers2010; @adamaszek_homotopy_2017

:::

:::{.column width="30%"}

![$\mathrm{sh}(\mathcal K)$](shadow-2.png){width="80%" fig-align="center"}

:::

:::


## Graph Reconstruction via Shadow {.smaller}

<!--
::::{.callout-tip icon="false" .nonincremental style="font-size: 1em"}
## Topological Reconstruction [@graph_shadow]
Let $G \subset \mathbb{R}^N$ be a compact, connected metric graph.  
Fix any $\xi\in\left(0,\frac{1}{4}\right)$.
For any positive $\beta<\frac{\ell(G)}{4}$, choose a positive $\varepsilon\leq\frac{\beta}{3}$ such that $\delta^{\varepsilon}_{\beta}(G)\leq\frac{1+2\xi}{1+\xi}$. 
If $S\subset \mathbb R^N$ is compact and $d_H(G,S)<\tfrac{1}{2}\xi\varepsilon$, then have a homotopy equivalence $\mathcal R^\varepsilon_\beta(S)\simeq G$.
:::

. . . 
-->

::::{.callout-tip icon="false" .nonincremental style="font-size: 1em"}
## Geometric Reconstruction [@graph_shadow]
<gray>Let $\mathcal G \subset \mathbb{R}^2$ a graph.
Fix any $\xi\in\left(0,\frac{1-\Theta}{6}\right)$.
For any positive $\beta<\min\left\{\Delta(\mathcal G),\frac{\ell(\mathcal G)}{12}\right\}$, choose a positive $\varepsilon\leq\frac{(1-\Theta)(1-\Theta-6\xi)}{12}\beta$ such that $\delta^{\varepsilon}_{\beta}(\mathcal G)\leq\frac{1+2\xi}{1+\xi}$.</gray>

If $\mathcal S\subset \mathbb R^2$ and $d_H(\mathcal G, \mathcal S)<\tfrac{1}{2}\xi\varepsilon$, then the shadow $sh(\mathcal R_\beta^\varepsilon(\mathcal S))$ is <green>homotopy equivalent</green> to $\mathcal G$. 
Moreover, <green>$d_H(sh(\mathcal R_\beta^\varepsilon(\mathcal S)),\mathcal G)<\left(\beta+\frac{1}{2}\xi\varepsilon\right)$</green>. 
:::

- <green>$\Theta\in(0,1)$</green>: depends on the angles between tangents of edges at the graph vertices
- <green>$\Delta(G)$</green>: *Shadow radius* positive number for graphs with smooth edges
- $\mathcal G$ is <red>planar</red>

# Future Directions 

- The general case: <green>$\mathcal G\subset\mathbb R^N$</green>
    - *in preparation* with <green>Kazuhiro Kawamura</green> & <green>Atish Mitra</green>
- Use <green>discrete Morse theory</green> to perform *organized collapses* of higher dimensional simplices of shadow for homeomorphic reconstruction

- <green>Submanifold reconstruction</green> via Vietoris--Rips shadow
    - Topological reconstruction already done in [@MajhiLatschev]

## References {background-image="drawing.png" background-opacity="0.3"}
